{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","CardComponent","map","user","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAaeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAA1B,cAC3B,gCACI,6BAAKF,IACL,4BAAIC,WCYLK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEVC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAQ,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAOT,GAClBF,KAAMO,EAAOI,GAAOX,KACpBC,MAAOM,EAAOI,GAAOV,OAHhBU,MAMjB,OACI,8BACEH,KCDKI,EAZI,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC7B,OACA,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,G,YARA,SAACC,GACZ,OACQ,qBAAKhB,UAAU,aAAf,SACKgB,EAAMC,aC2CRC,E,kDAzCX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAlB1C,EAAKC,MAAQ,CACTrB,OAAQ,GACRkB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CACVjB,OAAQ0B,EACRR,YAAa,U,oBASzB,WACI,MAAgCS,KAAKN,MAA7BrB,EAAR,EAAQA,OAAQkB,EAAhB,EAAgBA,YACVU,EAAiB5B,EAAO6B,QAAO,SAACC,GAClC,OAAOA,EAAMrC,KAAKsC,oBAAoBC,SAASd,EAAYa,wBAG/D,OAAyB,IAAlB/B,EAAOiC,OACT,gDACD,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWW,aAAcoB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,OAAQ4B,a,GApCpBM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7ef0d95.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\"> \r\n            <img alt=\"_robotphoto_\" src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n\r\n    const CardComponent = robots.map((user,index) => {\r\n        return (<Card \r\n                key={index} \r\n                id={robots[index].id} \r\n                name={robots[index].name} \r\n                email={robots[index].email}\r\n                />);\r\n    });\r\n    return (\r\n        <div>\r\n        { CardComponent }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = (({searchfield,searchChange}) => {\r\n    return (\r\n    <div className=\"pa2\">\r\n        <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type=\"search\" \r\n        placeholder=\"Search Robots\" \r\n        onChange={searchChange}/>\r\n    </div>\r\n    )\r\n});\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n            <div className=\"scrollable\">\r\n                {props.children}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './app.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            return response.json();\r\n        }).then(users => {\r\n            this.setState({\r\n                robots: users,\r\n                searchField: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchField } = this.state;\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase());\r\n        });\r\n\r\n        return robots.length === 0 ?\r\n            (<div> Loading ... </div>) :\r\n            <div className=\"tc\">\r\n                <h1 className=\"f2\"> Robot Friends </h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import CardList from './CardList';\nimport 'tachyons';\n//import { robots } from './robot';\nimport App from './containers/App.js'\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}